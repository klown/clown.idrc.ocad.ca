<!DOCTYPE HTML PUBLIC "-//SoftQuad//DTD draft HTML 3.2 + extensions for HoTMetaL PRO 3.0 19960802//EN" "hmpro3.dtd"><HTML><HEAD><TITLE>Swing Set Component: Menus</TITLE><SCRIPT SRC="playSound.js" LANGUAGE="javascript"></SCRIPT></HEAD><BODY><H1>Menus:</H1><H2>Menu bar, Menus, and Menu Items</H2><H3><A NAME="MenuBar">Component Name: Menu Bar</A></H3><H4>Description</H4><P>A menu bar is the top level within a menu heirarchy.  Menu bars arefrequently associated with a window and are displayed near the top just belowthe title bar.  On some platforms, most notably the Macintosh, there is but onemenu bar at the top of the screen.  For the audio look and feel, the relevantmenu bar is taken to be the one associated with the currently active window.</P><H4>Sound Rationale</H4><P>There are only a few things a user can do with a menu bar.  One is to movekeyboard focus to it from wherever they are within the user interface.  Thisability to warp directly to the menu bar is cued by a rising-then-falling &quot;wee-woo&quot;sound that is meant to convey that they have left one part of the user interfaceand immediately moved to the menu bar.  Since this sound is distinct, it alsoconveys that the type of component moved to, namely &quot;menu bar&quot;.</P><P>Once there, the user can explore the menu bar's menus.  This incrementalnavigation is conveyed via the typical navigation audio cue.</P><P>Menu bars are somewhat inert objects in the sense that one cannot really domore than navigate to and within them.  As such, there is no activation auditoryfeedback over and above navigation.</P><P>With respect to reporting where one is within the menu bar, the audio lookand feel treats the entire menu system as a tree.  When the &quot;where-am-I?&quot;key press is made, the user interface lists the path to the current item in thesystem.  Thus, if just at the menu bar, then the report is &quot;menu bar&quot;. If further down, for example, at the &quot;cut&quot; menu item of the &quot;edit&quot;menu, the report is &quot;menu bar, edit, cut&quot;.</P><H4>Navigation</H4><OL><LI>Required navigation sound effect.<A HREF="javascript:playSound('menuBarNavTo.au', 'Warp to Menu Bar')">menuBarNavTo.wav</A></LI><LI>Optional disabled sound effect.<A HREF="javascript:playSound('disabled.wav', 'Disabled')">disabled.wav</A></LI><LI>Optional combined component ID and state information sound effect.  N/A.</LI><LI>Required name/title of component as speech.  N/A.</LI><LI>Optional role as speech. &quot;Menu bar&quot;.</LI><LI>Optional state as speech. N/A.</LI></OL><H4>Activation</H4><P>The audio look and feel does not support activation feedback over and abovethe navigation feed back.</P><H4>&quot;Where Am I?&quot;</H4><OL><LI>Optional disabled sound effect.  N/A.</LI><LI>Optional combined component ID and state information sound effect.  N/A.</LI><LI>Required name/title of component as speech.  N/A.</LI><LI>Optional role as speech. &quot;Menu bar&quot;.</LI><LI>Optional state as speech. N/A.</LI></OL><H4>First Letter Navigation</H4><P>First letter navigation is implemented for menu bars.  In this case, thesearch is confined to the menu bar when it has focus.  Pressing a key willinvoke the search; if a menu on the menu bar matches, the feedback is the sameas if the user navigated to that menu via the navigation keys.  Finally, if nomenu matches, a generic error sound is played.</P><H4>Additional Information (Control + shift + E)</H4><P>There is no additional information for the menu bar alone.</P><H4>Tool tip (Control + shift + T)</H4><P>It is assumed that there is no tool tip associated with a menu bar, so thereis no feedback for this keystroke.</P><HR><H3><A NAME="Menu">Component Name: Menu</A></H3><H4>Description</H4><P>A menu is one of the items within the menu bar, although it need not be. Whether a menu is embedded in a menu bar, or somehow stands alone, the auditoryfeed back for its navigation and manipulation are the same.</P><H4>Sound Rationale</H4><P>Once a user has navigated to the menu bar, it is unlikely that they will &quot;forget&quot;where they are.  Thus moving about the menus thereon does not require a specialsound effect to indicate that they have moved to another menu.  Thus, the audiofeedback for navigation is short and restricted to a sound that indicatesnavigation, a disabled sound when the menu is disabled, and the name of themenu.  The menu role and state is considered superfluous and not provided eitherin speech or non-speech audio when navigating.  However, activation of a menu isthe act of opening it, and here more information is provided.  Opening a menu ispresent visually by &quot;popping it up&quot; or &quot;pulling it down&quot; andrevealing all of its menu items.</P><H4>Navigation</H4><OL><LI>Required navigation sound effect.<A HREF="javascript:playSound('navTo.wav', 'Navigate')">navTo.wav</A></LI><LI>Optional disabled sound effect.<A HREF="javascript:playSound('disabled.wav', 'Disabled')">disabled.wav</A></LI><LI>Optional combined component ID and state information sound effect.  N/A.</LI><LI>Required name/title of component as speech.  &quot;&lt;Menu name&gt;&quot;[Alternate:  &quot;unknown&quot;].</LI><LI>Optional role as speech.  N/A.</LI><LI>Optional state as speech. N/A.</LI></OL><H4>Activation</H4><OL><LI>Required activation sound effect.<A HREF="javascript:playSound('popup.wav', 'Menu Open')">popup.wav</A></LI><LI>Required name/title of component as speech.  &quot;&lt;Menu name&gt;&quot;. [Alternate:  &quot;unknown&quot;].</LI><LI>Optional role as speech.  &quot;Menu&quot;.</LI><LI>Optional state as speech. &quot;Open&quot;.</LI></OL><H4>&quot;Where Am I?&quot;</H4><P>This lists the path through the entire menu system that leads to thecurrently selected menu.  If the menu is attached to a menu bar, the feedbackbegins with &quot;menu bar&quot;, and ends with the name of the menu.</P><OL><LI>Optional disabled sound effect.  N/A.</LI><LI>Optional combined component ID and state information sound effect.  N/A.</LI><LI>Required name/title of component as speech.  &quot;Menu bar, &lt;Menu name&gt;&quot;. [Alternate:  Menu bar, unknown&quot;].</LI><LI>Optional role as speech. N/A.</LI><LI>Optional state as speech:  If the menu is disabled, &quot;disabled&quot;;otherwise N/A.</LI></OL><H4>First Letter Navigation</H4><P>First letter navigation is implemented for menus.  In this case, the searchis confined to the selected menu.  Pressing a key will invoke the search; if amenu item within the menu matches, the feedback is the same as if the usernavigated to that menu item via the navigation keys.  If no menu matches, ageneric error sound is played.</P><H4>Additional Information (Control + shift + E)</H4><OL><LI>Hot Key &yuml;(if available) [Alternate: see below<A HREF="#noExtraInfo">*</A>].</LI><LI>Shortcut Keys &yuml; (if available) [Alternate: see below<AHREF="#noExtraInfo">*</A>] .</LI></OL><P><A NAME="noExtraInfo">*</A>If there is neither a hot key nor a shortcutkey, the general error is sounded.</P><H4>Tool tip (Control + shift + T)</H4><P>If there is a tooltip associated with the menu, it is spoken; otherwise thefeedback is the speech &quot;no tool tip&quot;.</P><HR><H3><A NAME="MenuItem">Component Name: Menu Item</A></H3><H4>Description</H4><P>Menu items come in four flavours.  A straight vanilla menu item is the mostcommon and represents a command that the user can select from the current menu. The three specialized menu items are a check box menu item, a radio button menuitem and a menu item that calls up another menu (a hierarchical menu item).  Theaudio feed back sequences are similar for all types of menu items, with smallchanges to audio and speech to indicate their differences.  As such, thesesequences are documented here with special comments to distinguish among thefour kinds of menu item.</P><H4>Navigation</H4><OL><LI>Required navigation sound effect.<A HREF="javascript:playSound('navTo.wav', 'Navigate')">navTo.wav</A></LI><LI>Optional disabled sound effect.<A HREF="javascript:playSound('disabled.wav', 'Disabled')">disabled.wav</A></LI><LI>Optional combined component ID and state information sound effect.<UL><LI>If check box menu item:  one of<A HREF="javascript:playSound('checkbox_check.wav', 'Menu Item Checked')">checkbox_check.wav</A>or<A HREF="javascript:playSound('checkbox_notchk.wav', 'Menu Item not Checked')">checkbox_notchk.wav</A></LI><LI>If radio button menu item:  one of<A HREF="javascript:playSound('rad_but_check.wav', 'Menu Item Radio On')">rad_but_check.wav</A>or<A HREF="javascript:playSound('rad_but_notcheck.wav', 'Menu Item Radio Off')">rad_but_notcheck.wav</A></LI><LI>If hierarchical menu item:  N/A.</LI><LI>If vanilla menu item:  N/A.</LI></UL></LI><LI>Required name/title of component as speech.  &quot;&lt;Menu Item name&gt;&quot;[Alternate:  &quot;unknown&quot;].</LI><LI>Optional role as speech.<UL><LI>If check box menu item:  &quot;Check Box Menu Item&quot;.</LI><LI>If radio button menu item:  &quot;Radio Button Menu Item&quot;.</LI><LI>If hierarchical menu item:  &quot;has sub menu&quot;.</LI><LI>If vanilla menu item:  N/A.</LI></UL></LI><LI>Optional state as speech.<UL><LI>If check box menu item:  one of &quot;checked&quot;  or &quot;unchecked&quot;.</LI><LI>If radio button menu item:  one of &quot;checked&quot; or &quot;not checked&quot;.</LI><LI>If hierarchical menu item:  N/A.</LI><LI>If vanilla menu item:  N/A.</LI></UL>  In all cases, if the menu item isdisabled, the speech &quot;disabled&quot; is given.</LI></OL><H4>Activation</H4><OL><LI>Required activation sound effect.<UL><LI>If check box menu item:  one of<A HREF="javascript:playSound('checkbox_check.wav', 'Menu Item Checked')">checkbox_check.wav</A>or<A HREF="javascript:playSound('checkbox_notchk.wav', 'Menu Item not Checked')">checkbox_notchk.wav</A></LI><LI>If radio button menu item:  one of<A HREF="javascript:playSound('rad_but_check.wav', 'Menu Item Radio On')">rad_but_check.wav</A>or<A HREF="javascript:playSound('rad_but_notcheck.wav', 'Menu Item Radio Off')">rad_but_notcheck.wav</A></LI><LI>If hierarchical menu item: <A HREF="javascript:playSound('popup.wav', 'Menu Open')">popup.wav</A></LI><LI>If vanilla menu item:<A HREF="javascript:playSound('activate.wav', 'Menu Item Activated')">activate.wav</A></LI></UL></LI><LI>Required name/title of component as speech.  &quot;&lt;Menu Item name&gt;&quot;. [Alternate:  &quot;unknown&quot;].</LI><LI>Optional role as speech.<UL><LI>If check box menu item:  &quot;Check Box Menu Item&quot;.</LI><LI>If radio button menu item:  &quot;Radio Button Menu Item&quot;.</LI><LI>If hierarchical menu item:  N/A.</LI><LI>If vanilla menu item:  N/A.</LI></UL></LI><LI>Optional state as speech.<UL><LI>If check box menu item:  one of &quot;checked&quot;  or &quot;unchecked&quot;.</LI><LI>If radio button menu item:  one of &quot;checked&quot; or &quot;not checked&quot;or &quot;already checked&quot;.</LI><LI>If hierarchical menu item:  &quot;Open&quot;.</LI><LI>If vanilla menu item:  &quot;Activated&quot;.</LI></UL></LI></OL><H4>&quot;Where Am I?&quot;</H4><P>This lists the path through the entire menu system that leads to the currentmenu item.</P><OL><LI>Optional disabled sound effect.  N/A.</LI><LI>Optional combined component ID and state information sound effect.  N/A.</LI><LI>Required name/title of component as speech.  &quot;Menu bar, &lt;Menu name&gt;,..., &lt;Menu item name&gt;&quot;. </LI><LI>Optional role as speech. N/A.</LI><LI>Optional state as speech:  If the menu is disabled, &quot;disabled&quot;;otherwise N/A.</LI></OL><H4>First Letter Navigation</H4><P>First letter navigation is implemented for menu items.  How the searchproceeds depends on the type of menu item.  If the menu item is hiearchical, andthe sub-menu is open, then the search is confined to the menu items of thesub-menu.  Otherwise, the search is confined to the menu item's parent menu.  Ineffect, the search is confined to the deepest open sub-menu.  Pressing a keywill invoke the search; if a menu item within the menu matches, the feedback isthe same as if the user navigated to that menu item via the navigation keys.  Ifno menu item matches, a generic error sound is played.</P><H4>Additional Information (Control + shift + E)</H4><OL><LI>Hot Key (if available) [Alternate: see below<A HREF="#noExtraInfo">*</A>].</LI><LI>Shortcut Keys (if available) [Alternate: see below<A HREF="#noExtraInfo">*</A>].</LI></OL><P><A NAME="noExtraInfo">*</A>If there is neither a hot key nor a shortcutkey, the general error is sounded.</P><H4>Tool tip (Control + shift + T)</H4><P>If there is a tooltip associated with the menu item, it is spoken; otherwisethe feedback is the speech &quot;no tool tip&quot;.</P><HR><H3>Leaving Menu System</H3><P>If the user wishes to &quot;exit&quot; the menu bar, or, indeed, the entiremenu system, they can do so at any time.  Keyboard focus will revert to where itwas before they warped to the menu bar and started navigating among its menusand their menu items.  In this case, a special audio feedback sequence is givento indicate the exiting of the menu system:</P><OL><LI>Navigation sound effect. <A HREF="javascript:playSound('menuBarNavFrom.wav', 'Leaving Menu System')">menuBarNavFrom.wav</A></LI><LI>Navigation speech.  &quot;leaving&quot;</LI><LI>Navigation role.  &quot;Menu Bar&quot;.</LI></OL><HR><P><A HREF="ss_contents.htm">Table of Contents</A><BR>   End of file<BR>  Last updated 10 Jun 99</P></BODY></HTML>